---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name qbitmanage
  namespace: downloads

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      ${APP}:
        enabled: true
        type: cronjob
        cronjob:
          schedule: "30 0 * * *"  # Run daily at 1230am
          timeZone: ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
          ttlSecondsAfterFinished: 60
          backoffLimit: 0
          activeDeadlineSeconds: 60

        # Controller-specific overrides for `defaultPodOptions` keys
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            nameOverride: *name
            image:
              repository: ghcr.io/stuffanthings/qbit_manage
              tag: develop@sha256:05e8f35ff36ce65b59c30dd82f335f987c0d094a89457b825899129e3a46cf31

            env:
              TZ: ${TIMEZONE}

            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

            lifecycle:
              postStart:
                exec:
                  command: ["/bin/sh", "-c", "cp /secret/config.yml /config/config.yml"]

    persistence:
      app:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /app/config
          - path: /config

      config-file:
        type: secret
        name: qbitmanage-secret
        globalMounts:
          - path: /secret/config.yml
            subPath: config.yml
            readOnly: true

      media:
        enabled: true
        type: nfs
        server: ${OMV_IP}
        path: /export/media
        globalMounts:
          - path: /media/