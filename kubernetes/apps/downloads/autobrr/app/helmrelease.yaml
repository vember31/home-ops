---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name autobrr
  namespace: downloads

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      ${APP}:
        enabled: true
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: autobrr-secret

        containers:
          app:
            image:
              repository: ghcr.io/autobrr/autobrr
              tag: v1.52.0@sha256:329307d54fcfc8a79536a2619b5b78a834706dd97ea34c50180f52591fe5ce01
            env:
              AUTOBRR__CHECK_FOR_UPDATES: false
              AUTOBRR__HOST: 0.0.0.0
              AUTOBRR__PORT: &port 7474
              AUTOBRR__LOG_LEVEL: INFO
              TZ: ${TIMEZONE}
            envFrom: *envFrom

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthz/liveness
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568

    service:
      app:
        controller: *name
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: traefik.local.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.middlewares: networking-secure-networks@kubernetescrd
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: "Modern Download Automation"
          gethomepage.dev/group: Downloads
          gethomepage.dev/icon: autobrr
          gethomepage.dev/name: Autobrr
          gethomepage.dev/widget.type: ${APP}
          gethomepage.dev/widget.url: http://${APP}.downloads.svc.cluster.local:7474
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_AUTOBRR_TOKEN}}` }}"
        hosts:
          - host: &host ${GATUS_SUBDOMAIN:-${APP}}.local.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

        tls: 
         - secretName: ${APP}-tls-production
           hosts:
             - *host

    persistence:
      tmp:
        type: emptyDir
      