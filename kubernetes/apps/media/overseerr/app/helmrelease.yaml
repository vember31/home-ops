---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name overseerr
  namespace: media

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      ${APP}:
        enabled: true
        type: deployment
        annotations: {}
        labels: {}
        replicas: 1

        containers:
          app:
            nameOverride: *name
            image:
              repository: ghcr.io/hotio/overseerr
              tag: release-1.33.2@sha256:cb8533ef4e765c75d690d933fecb274a209f94225d418b79e8c34e6035ba920a
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              PUID: 1000
              PGID: 1000
              UMASK: 002

            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 100m

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      app:
        controller: *name
        ports:
          http:
            port: 5055

    ingress:
      app:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.middlewares: networking-cloudflare-ips@kubernetescrd
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          hajimari.io/icon: mdi:eye-circle
          hajimari.io/info: &description Media Request Management
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: *description
          gethomepage.dev/group: Media
          gethomepage.dev/icon: overseerr
          gethomepage.dev/name: Overseerr
          gethomepage.dev/widget.type: ${APP}
          gethomepage.dev/widget.url: http://${APP}.media.svc.cluster.local:5055
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_OVERSEERR_TOKEN}}` }}"
        hosts:
          - host: &host requests.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

        tls: 
         - secretName: ${APP}-tls-production
           hosts:
             - *host

    persistence:

      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 128Mi
        retain: false
        globalMounts:
          - path: /config
            readOnly: false