---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &name overseerr
  namespace: media

spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      main:
        enabled: true
        type: deployment
        annotations: {}
        labels: {}
        replicas: 1

        # Controller-specific overrides for `defaultPodOptions` keys
        # pod:
        #   securityContext:
        #     runAsUser: 1000
        #     runAsGroup: 1000
        #     fsGroup: 1000
        #     fsGroupChangePolicy: "OnRootMismatch"

        containers:
          main:
            nameOverride: *name
            image:
              repository: ghcr.io/hotio/overseerr
              tag: release-1.33.2@sha256:b6ab4511ab31e63adcb9de16f9fd754884b57389b832a0fc37c135df4adbd2d4
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              PUID: 1000
              PGID: 1000
              UMASK: 002

            resources:
              {}
              ## We usually recommend not to specify default resources and to leave this as a conscious
              ## choice for the user. This also increases chances charts run on environments with little
              ## resources, such as Minikube. If you do want to specify resources, uncomment the following
              ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
              # limits:
              #   cpu: 100m
              #   memory: 128Mi
              # requests:
              #   cpu: 100m
              #   memory: 128Mi

    service:
      main:
        ports:
          http:
            port: 5055

    ingress:
      main:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          hajimari.io/icon: mdi:eye-circle
          hajimari.io/info: Media Request Management
        hosts:
          - host: &host requests.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http

        tls: 
         - secretName: overseerr-tls-production
           hosts:
             - *host

    persistence:

      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 128Mi
        retain: false
        globalMounts:
          - path: /config
            readOnly: false

      # media:
      #   enabled: true
      #   type: nfs
      #   server: ${OMV_IP}
      #   path: /export/media 
      #   globalMounts:
      #     - path: /media/
      