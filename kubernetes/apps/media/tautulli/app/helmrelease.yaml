---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name tautulli
  namespace: media

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      ${APP}:
        enabled: true
        type: deployment
        annotations: {}
        labels: {}
        replicas: 1
        
        containers:
          app:
            nameOverride: *name
            image:
              repository: ghcr.io/hotio/tautulli
              tag: release-2.15.1@sha256:6aa994ee2b4251449c6c9b40dc0bea79344d93bfbdd4cedda98860a62c58caf4
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              PUID: 1000
              PGID: 1000
              UMASK: 002

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: &path /status
                    port: &port 8181
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi

            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false

          jbops:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.0@sha256:0330739a707a2969d617e859f096659ab6d149212658ac0ad7e550b59482ebf0
            env:
              GITSYNC_REPO: https://github.com/blacktwin/JBOPS
              GITSYNC_REF: master
              GITSYNC_PERIOD: 86400s # 1 day
              GITSYNC_ROOT: /add-ons
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext: *securityContext

    service:
      app:
        controller: *name
        ports:
          http:
            port: 8181

    ingress:
      app:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: traefik.local.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.middlewares: networking-secure-networks@kubernetescrd
          hajimari.io/icon: arcticons:tautulli-remote
          hajimari.io/info: &description Plex Analytics
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: *description
          gethomepage.dev/group: Media
          gethomepage.dev/icon: tautulli
          gethomepage.dev/name: Tautulli
          gethomepage.dev/widget.type: ${APP}
          gethomepage.dev/widget.url: http://${APP}.media.svc.cluster.local:8181
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_TAUTULLI_TOKEN}}` }}"
          gethomepage.dev/widget.enableUser: "true"
          gethomepage.dev/widget.showEpisodeNumber: "true"
          gethomepage.dev/widget.expandOneStreamToTwoRows: "true"
        hosts:
          - host: &host ${APP}.local.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

        tls: 
         - secretName: ${APP}-tls-production
           hosts:
             - *host

    persistence:

      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 10Gi
        retain: true
        globalMounts:
          - path: /config
            readOnly: false

      add-ons:
        type: emptyDir

      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
          
      tmp:
        type: emptyDir