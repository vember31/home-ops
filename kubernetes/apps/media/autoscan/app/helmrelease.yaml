---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: autoscan
  namespace: media

spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      main:
        enabled: true
        type: deployment
        annotations: {}
        labels: {}
        replicas: 1

        containers:
          main:
            nameOverride: autoscan
            image:
              repository: ghcr.io/hotio/autoscan
              tag: release-1.4.0@sha256:b354b9e150f194a6e0d210860781e6ca898f3b1c597d1327976ccb6862a6dc43
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              PUID: 1000
              PGID: 1000
              UMASK: 002

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

    service:
      main:
        ports:
          http:
            port: 3030

    persistence:

      # config:
      #   enabled: true
      #   type: persistentVolumeClaim
      #   storageClass: longhorn
      #   accessMode: ReadWriteOnce
      #   size: 128Mi
      #   retain: false
      #   globalMounts: []

      config-file:
        enabled: true
        type: configMap
        name: autoscan-config-file
        globalMounts:
          - path: /config/config.yml
            readOnly: true
            subPath: config.yml

      # movies:
      #   enabled: true
      #   type: nfs
      #   server: ${OMV_IP}
      #   path: /export/movies 
      #   globalMounts:
      #     - path: /media/movies

      # tv:
      #   enabled: true
      #   type: nfs
      #   server: ${OMV_IP}
      #   path: /export/tv
      #   globalMounts:
      #     - path: /media/tv

    configMaps:
      config-file: 
        enabled: true
        data: 
          config.yml: |-

              # <- processor ->
              minimum-age: 2m
              port: 3030

              triggers:
                sonarr:
                  - name: sonarr
                    priority: 2

                radarr:
                  - name: radarr   # /triggers/radarr
                    priority: 2

              # <- targets ->
              targets:
                plex:
                  - url: http://${PLEX_IP}:32400
                    token: ${PLEX_TOKEN} 
