---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &name plex-image-cleanup
  namespace: media

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  dependsOn:
    - name: plex
      namespace: media

  values:
    controllers:
      main:
        type: cronjob
        cronjob:
          schedule: "30 2 * * *"
          timeZone: &timeZone America/Chicago
        containers:
          main:
            image:
              repository: docker.io/meisnate12/plex-image-cleanup
              tag: v1.0.2@sha256:257634cb149f104658079274139bd55d652962ecf331bfda01e71c10686f9e32
            env:
              TZ: *timeZone
              PLEX_URL: http://plex.media.svc.cluster.local:32400
              PLEX_PATH: /plex-config/Library/Application Support/Plex Media Server
              MODE: remove
              PHOTO_TRANSCODER: true
            envFrom:
              - secretRef:
                  name: plex-image-cleanup-secret #PLEX_TOKEN, DISCORD
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        pod:
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["plex"]
                  topologyKey: kubernetes.io/hostname
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
    service:
      main:
        enabled: false
    persistence:
      config:
        enabled: true
        type: emptyDir
      plex-config:
        existingClaim: plex-config
      