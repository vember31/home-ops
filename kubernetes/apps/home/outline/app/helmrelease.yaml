---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name outline
  namespace: home

spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      ${APP}:
        enabled: true
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1

        pod:
          securityContext:
            fsGroup: 1001
            runAsUser: 1001
            runAsGroup: 1001
            fsGroupChangePolicy: "OnRootMismatch"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: outline-secret

        containers:
          app:
            image:
              repository: docker.io/outlinewiki/outline
              tag: 0.87.4@sha256:c0818e82d54861793e393ee77178b4ce9bf88abf11abb91740c677cd4f6e9524
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              NODE_ENV: production
              PGSSLMODE: disable
              REDIS_URL: ioredis://ewogICJkYiI6IDE1LAogICJzZW50aW5lbHMiOiBbCiAgICB7ICJob3N0IjogInJlZGlzLXNlbnRpbmVsLmRhdGFiYXNlLnN2Yy5jbHVzdGVyLmxvY2FsIiwgInBvcnQiOiAyNjM3OSB9CiAgXSwKICAibmFtZSI6ICJyZWRpcy1tYXN0ZXIiCn0K
              URL: https://${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}
              PORT: &port 3000

              FILE_STORAGE: local
              FILE_STORAGE_UPLOAD_MAX_SIZE: "26214400"
              FILE_STORAGE_IMPORT_MAX_SIZE: "26214400"
              FILE_STORAGE_WORKSPACE_IMPORT_MAX_SIZE: "26214400"
              
              DATABASE_CONNECTION_POOL_MAX: 10
              WEB_CONCURRENCY: 10

            envFrom: *envFrom
            command: ["/bin/sh", "-c", "yarn db:migrate --env=production-ssl-disabled && yarn start --env=production-ssl-disabled"]

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /_health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 30
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
              startup: *probes

    service:
      app:
        controller: *name
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.middlewares: networking-external-with-errors@kubernetescrd
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}" 
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: "Note-taking & Documentation"
          gethomepage.dev/group: Home
          gethomepage.dev/icon: outline.png
          gethomepage.dev/name: Outline
          gethomepage.dev/siteMonitor: https://${GATUS_SUBDOMAIN:-${APP}}.${SECRET_DOMAIN}

        hosts:
          - host: &host ${GATUS_SUBDOMAIN:-${APP}}.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

        tls: 
         - secretName: ${APP}-tls-production
           hosts:
             - *host

    persistence:

      file-storage:
        enabled: true
        suffix: file-storage
        type: persistentVolumeClaim
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 5Gi
        retain: true
        globalMounts: 
          - path: /var/lib/outline/data