---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name outline
  namespace: home

spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      ${APP}:
        enabled: true
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: outline-secret

        containers:
          app:
            nameOverride: *name
            image:
              repository: docker.io/outlinewiki/outline
              tag: 0.79.1@sha256:0785351e332e07c426bdcbfea93521887ac0970d2269739702f19dbd3f7d3699
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              NODE_ENV: production
              PGSSLMODE: disable
              REDIS_URL: redis://dragonfly.database.svc.cluster.local:6379
              URL: https://notes.${SECRET_DOMAIN}
              PORT: &port 3000
              FILE_STORAGE: s3
              AWS_REGION: us-midwest-1
              AWS_S3_ACCELERATE_URL: 
              AWS_S3_UPLOAD_BUCKET_URL: http://${OMV_IP}:9001
              AWS_S3_UPLOAD_BUCKET_NAME: outline
              AWS_S3_FORCE_PATH_STYLE: true
              AWS_S3_ACL: private
            envFrom: *envFrom
            command: ["/bin/sh", "-c", "yarn db:migrate --env=production-ssl-disabled && yarn start --env=production-ssl-disabled"]

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 750Mi

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      app:
        controller: *name
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.middlewares: networking-cloudflare-ips@kubernetescrd
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}" 
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: "Note-taking & Documentation"
          gethomepage.dev/group: Home
          gethomepage.dev/icon: outline.png
          gethomepage.dev/name: Outline
        hosts:
          - host: &host ${GATUS_SUBDOMAIN:-${APP}}.local.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

        tls: 
         - secretName: ${APP}-tls-production
           hosts:
             - *host