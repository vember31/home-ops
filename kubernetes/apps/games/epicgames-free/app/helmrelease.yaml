---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name epicgames
  namespace: games

spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      ${APP}:
        enabled: true
        type: cronjob
        cronjob:
          schedule: "15 4,10,16,22 * * *"
          timeZone: &timeZone ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1

        containers:
          app:
            nameOverride: *name
            image:
              repository: ghcr.io/claabs/epicgames-freegames-node
              tag: latest@sha256:ee0f5486de7cea88535fc9d22ab604ab64f95aff066a125b54a97b7c77a79b5f
              pullPolicy: IfNotPresent

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }

            probes: 
              liveness: 
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      app:
        controller: *name
        ports:
          http:
            port: 3000

    ingress:
      app:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: traefik.local.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.middlewares: networking-secure-networks@kubernetescrd
          gethomepage.dev/enabled: "false"
          gethomepage.dev/description: Free Epic Games Aggregator
          gethomepage.dev/group: Home
          gethomepage.dev/icon: si-epicgames
          gethomepage.dev/name: Epic Games Free
        hosts:
          - host: &host ${GATUS_SUBDOMAIN:-${APP}}.local.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

        tls: 
         - secretName: ${APP}-tls-production
           hosts:
             - *host

    persistence:

      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 64Mi
        retain: true
        globalMounts: 
          - path: /usr/app/config

      config-secret:
        enabled: true
        type: secret
        name: epicgames-secret
        globalMounts:
          - path: /usr/app/config/config.json
            subPath: config.json
            readOnly: true

      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      