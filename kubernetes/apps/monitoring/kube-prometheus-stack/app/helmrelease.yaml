---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kube-prometheus-stack
  namespace: monitoring

spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 70.3.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 10m

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:
    crds:
      enabled: true
    alertmanager:
      enabled: true
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: traefik.local.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.middlewares: networking-internal-with-errors@kubernetescrd
          hajimari.io/appName: Alert Manager
          hajimari.io/icon: mingcute:alert-fill
          hajimari.io/info: Cluster Alert Management
        hosts:
          - &amhost alertmanager.local.${SECRET_DOMAIN}
        path: /
        tls: 
          - secretName: alert-manager-tls-production
            hosts:
            - *amhost
      alertmanagerSpec:
        replicas: 2
        useExistingSecret: true
        configSecret: alertmanager-secret
        # resources:
        #   requests:
        #     cpu: 10m
        #   limits:
        #     memory: 64Mi
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 1Gi
      affinity: &affinity
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists

    grafana:
      enabled: false
      forceDeployDashboards: true
      defaultDashboardsTimezone: ${TIMEZONE}
      
      # grafana.ini:
      #   panels:
      #     disable_sanitize_html: true
      
      # ingress:
      #   enabled: true
      #   annotations:
      #     cert-manager.io/cluster-issuer: letsencrypt-production
      #   hosts:
      #     - &grafanahost grafana.local.${SECRET_DOMAIN}
      #   path: /
      #   tls: 
      #     - secretName: grafana-tls-production
      #       hosts:
      #       - *grafanahost

    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: (aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: (apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authentication_token|cadvisor_version|container_blkio|container_cpu|container_fs|container_last|container_memory|container_network|container_oom|container_processes|container|csi_operations|disabled_metric|get_token|go|hidden_metric|kubelet_certificate|kubelet_cgroup|kubelet_container|kubelet_containers|kubelet_cpu|kubelet_device|kubelet_graceful|kubelet_http|kubelet_lifecycle|kubelet_managed|kubelet_node|kubelet_pleg|kubelet_pod|kubelet_run|kubelet_running|kubelet_runtime|kubelet_server|kubelet_started|kubelet_volume|kubernetes_build|kubernetes_feature|machine_cpu|machine_memory|machine_nvm|machine_scrape|node_namespace|plugin_manager|prober_probe|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|storage_operation|volume_manager|volume_operation|workqueue)_(.+)
          - action: replace
            sourceLabels: ["node"]
            targetLabel: instance
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    
    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 192.168.2.11
        - 192.168.2.12
        - 192.168.2.13
        - 192.168.2.14
        - 192.168.2.15
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|attachdetach_controller|authenticated_user|authentication|cronjob_controller|disabled_metric|endpoint_slice|ephemeral_volume|garbagecollector_controller|get_token|go|hidden_metric|job_controller|kubernetes_build|kubernetes_feature|leader_election|node_collector|node_ipam|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|pv_collector|registered_metric|replicaset_controller|rest_client|retroactive_storageclass|root_ca|running_managed|scrape_duration|scrape_samples|scrape_series|service_controller|storage_count|storage_operation|ttl_after|volume_operation|workqueue)_(.+)"
    
    kubeEtcd:
      enabled: true
      endpoints: *cp
    
    kubeScheduler:
      enabled: true
      endpoints: *cp
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authenticated_user|authentication|disabled_metric|go|hidden_metric|kubernetes_build|kubernetes_feature|leader_election|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scheduler|scrape_duration|scrape_samples|scrape_series|workqueue)_(.+)"
    
    kubeProxy:
      enabled: false
    
    kubeStateMetrics:
      enabled: true
    
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
    
    nodeExporter:
      enabled: true
   
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    
    prometheusOperator:
      affinity: *affinity
    
    prometheus:
      thanosService:
        enabled: false
      thanosServiceMonitor:
        enabled: false
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: traefik.local.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.middlewares: networking-internal-with-errors@kubernetescrd
          hajimari.io/appName: Prometheus
          hajimari.io/icon: simple-icons:prometheus
          hajimari.io/info: Cluster Data Aggregation
        pathType: Prefix
        hosts:
          - &promhost prometheus.local.${SECRET_DOMAIN}
        path: /
        tls: 
          - secretName: prometheus-tls-production
            hosts:
            - *promhost
      prometheusSpec:
        enableAdminAPI: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalLabels:
          cluster: ${CLUSTER_NAME}
        replicaExternalLabelName: __replica__
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        retention: 12h
        retentionSize: 5GB #max size
        replicas: 1 #avoid need for thanos for my current monitoring needs
        affinity: *affinity
        # resources:
        #   requests:
        #     cpu: 15m
        #   limits:
        #     memory: 128Mi
        # storageSpec:
        #   volumeClaimTemplate:
        #     spec:
        #       storageClassName: longhorn
        #       resources:
        #         requests:
        #           storage: 15Gi
        # additionalScrapeConfigs:
        #   - job_name: node-exporter
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets:
        #           - ${NAS_IP}:9100
        #   - job_name: kube-vip
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     metrics_path: /metrics
        #     static_configs:
        #       - targets:
        #           - 192.168.1.50:2112
        #           - 192.168.1.51:2112
        #           - 192.168.1.52:2112
        # thanos:
        #   image: quay.io/thanos/thanos:v0.34.0
        #   objectStorageConfig:
        #     existingSecret:
        #       name: thanos-objstore-secret
        #       key: objstore.yml
    cleanPrometheusOperatorObjectNames: true
    thanosRuler:
      enabled: false
  
  postRenderers:
    - kustomize:
        patches:
          - target:
              version: v1
              kind: ConfigMap
              labelSelector: grafana_dashboard in (1)
            patch: |-
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: not-used
                namespace: not-used
                annotations:
                  grafana_folder: Kubernetes