
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 9.3.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:

    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DAET_FORMATS_DEFAULT_TIMEZONE: ${TIMEZONE}
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_LOG_MODE: console
      GF_NEWS_NEWS_FEED_ENABLED: false
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: *app
      GF_SERVER_ROOT_URL: https://grafana.local.${SECRET_DOMAIN}
    envFromSecrets:
      - name: grafana-secret

    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: Viewer
        hide_version: false
      security:
        cookie_secure: true
    
    # tried to use these as env variables but need this instead?
    admin:
      existingSecret: grafana-secret
      passwordKey: GF_SECURITY_ADMIN_PASSWORD
      userKey: GF_SECURITY_ADMIN_USER

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: blocky
            orgId: 1
            folder: Blocky
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/blocky
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: longhorn
            orgId: 1
            folder: Longhorn
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/longhorn
          - name: media
            orgId: 1
            folder: Media
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/media
          - name: prometheus
            orgId: 1
            folder: Prometheus
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/prometheus
          # - name: thanos
          #   orgId: 1
          #   folder: Thanos
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   options:
          #     path: /var/lib/grafana/dashboards/thanos
          - name: traefik
            orgId: 1
            folder: Traefik
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/traefik
          - name: unifi
            orgId: 1
            folder: Unifi
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/unifi
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          # - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://prometheus-operated.monitoring.svc.cluster.local:9090
            jsonData:
              implementation: prometheus
            isDefault: true
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.monitoring.svc.cluster.local.:9093
            jsonData:
              implementation: prometheus
          - name: Blocky-Postgres
            type: postgres
            uid: blocky-postgres
            access: proxy
            url: postgres-17-ro.database.svc.cluster.local:5432
            user: "${BLOCKY_POSTGRES_USER}"
            secureJsonData:
              password: "${BLOCKY_POSTGRES_PASS}"
            jsonData:
              database: blocky
              sslmode: 'disable' # disable/require/verify-ca/verify-full
          # - name: Loki
          #   type: loki
          #   uid: loki
          #   access: proxy
          #   url: http://loki-gateway.monitoring.svc.cluster.local.:80
          #   jsonData:
          #     maxLines: 250
    dashboards:
      default:
        cert-manager:
          #url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          # switch to gnet dashboard due to missing data elements in mixin above
          gnetId: 11001
          revision: 1
          datasource: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        gatus:
          url: https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-grafana-prometheus/grafana/provisioning/dashboards/gatus.json
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 41
          datasource: Prometheus

      blocky:
        blocky:
          # renovate: depName="blocky"
          gnetId: 13768
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
            - name: VAR_BLOCKY_URL
              value: https:\/\/blocky.local.${SECRET_DOMAIN}
        blocky-query:
          url: https://raw.githubusercontent.com/0xERR0R/blocky/main/docs/blocky-query-grafana-postgres.json
          datasource:
            - name: DS_POSTGRES
              value: blocky-postgres
        blocky-postgres:
          gnetId: 17996
          revision: 12
          datasource:
            - name: DS_BLOCKY-POSTGRESQL
              value: blocky-postgres
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        k3s-cluster:
          gnetId: 16450
          revision: 3
          datasource: Prometheus
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 21
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 37
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      longhorn:
        longhorn:
          # renovate: depName="Longhorn"
          gnetId: 16888
          revision: 9
          datasource: Prometheus
      media:
        exportarr:
          url: https://raw.githubusercontent.com/onedr0p/exportarr/master/examples/grafana/dashboard2.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        overseerr-exporter:
          url: https://raw.githubusercontent.com/WillFantom/overseerr-exporter/main/grafana/dashboard.json
          datasource: Prometheus
        qbittorrent-exporter:
          url: https://raw.githubusercontent.com/esanchezm/prometheus-qbittorrent-exporter/master/grafana/dashboard.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        unpackerr:
          # renovate: depName="Unpackerr"
          gnetId: 18817
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
      prometheus:
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 7
          datasource: Prometheus
      traefik:
        traefik-2.2:
          gnetId: 12250
          revision: 1
          datasource: Prometheus          
      unifi:
        unifi-insights:
          # renovate: depName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        unifi-network-sites:
          # renovate: depName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-uap:
          # renovate: depName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_datasource
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel

    serviceMonitor:
      enabled: true

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        traefik.ingress.kubernetes.io/router.middlewares: networking-internal-with-errors@kubernetescrd
        external-dns.alpha.kubernetes.io/target: traefik.local.${SECRET_DOMAIN}
        hajimari.io/appName: Grafana
        hajimari.io/icon: simple-icons:grafana
        hajimari.io/info: &description Data Visualization
        gethomepage.dev/enabled: "true"
        gethomepage.dev/description: *description
        gethomepage.dev/group: Monitoring
        gethomepage.dev/icon: grafana
        gethomepage.dev/name: Grafana
        gethomepage.dev/widget.type: ${APP}
        gethomepage.dev/widget.url: &siteMonitor http://${APP}.monitoring.svc.cluster.local
        gethomepage.dev/widget.username: "{{ `{{HOMEPAGE_VAR_GRAFANA_USERNAME}}` }}"
        gethomepage.dev/widget.password: "{{ `{{HOMEPAGE_VAR_GRAFANA_PASSWORD}}` }}"
        gethomepage.dev/siteMonitor: *siteMonitor

      hosts:
        - &host "grafana.local.${SECRET_DOMAIN}"
      paths:
        - /
      tls: 
        - secretName: grafana-tls-production
          hosts:
            - *host

    resources:
      requests:
        cpu: 100m
      limits:
        memory: 256Mi

    persistence:
      enabled: false

    testFramework:
      enabled: false
      
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app