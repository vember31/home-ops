---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name dozzle
  namespace: monitoring

spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:

    controllers:
      ${APP}:
        enabled: true
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        serviceAccount:
          identifier: ${APP}

        containers:
          app:
            image:
              repository: amir20/dozzle
              tag: v8.14.1@sha256:97131e414f57695249ce0af1b193927c93395e97b59ad0637df0606af59ceb63
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              DOZZLE_MODE: k8s
              DOZZLE_ENABLE_SHELL: true

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      app:
        controller: *name
        ports:
          http:
            port: 8080

    ingress:
      app:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: traefik.local.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.middlewares: networking-internal-with-errors@kubernetescrd
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Log Aggregation
          gethomepage.dev/group: Monitoring
          gethomepage.dev/icon: dozzle
          gethomepage.dev/name: Dozzle
          gethomepage.dev/siteMonitor: http://${APP}.monitoring.svc.cluster.local:8080

        hosts:
          - host: &host ${GATUS_SUBDOMAIN:-${APP}}.local.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

        tls: 
         - secretName: ${APP}-tls-production
           hosts:
             - *host

    serviceAccount:
      ${APP}: {}