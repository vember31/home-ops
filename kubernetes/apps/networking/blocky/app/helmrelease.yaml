---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name blocky
  namespace: networking

spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1

  values:
      controllers:
        ${APP}:
          type: daemonset #remove replicas for daemonset
          strategy: RollingUpdate
          annotations:
            reloader.stakater.com/auto: "true"
          initContainers:
            init-db:
              image:
                repository: ghcr.io/home-operations/postgres-init
                tag: 17
              envFrom:
                - secretRef:
                    name: blocky-secret
          containers:
            app:
              image:
                repository: ghcr.io/0xerr0r/blocky
                tag: v0.26@sha256:b259ada3f943e73283f1fc5e84ac39a791afec7de86515d1aeccc03d2c39e595
              env:
                TZ: ${TIMEZONE}
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    tcpSocket:
                      port: &port 53
                    initialDelaySeconds: 30
                    periodSeconds: 30
                    failureThreshold: 3
                readiness: *probes
                startup:
                  enabled: false
              resources:
                requests:
                  cpu: 10m
                limits:
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  add:
                    - NET_BIND_SERVICE
                  drop:
                    - ALL
          pod:
            securityContext:
              runAsUser: 568
              runAsGroup: 568
              runAsNonRoot: true
              
      serviceMonitor:
        app:
          serviceName: *name
          endpoints:
            - port: http
              scheme: http
              path: /metrics
              interval: 1h
              scrapeTimeout: 1m

      service:
        app:
          controller: *name
          ports:
            http:
              port: 4000

        dns:
          controller: *name
          type: LoadBalancer
          annotations:
            metallb.io/loadBalancerIPs: "${BLOCKY_IP}"
          externalTrafficPolicy: Local #switch back to Local now that MetalLB is deployed in BGP mode
          ports:
            dns-tcp:
              enabled: true
              port: *port
              protocol: TCP
            dns-udp:
              enabled: true
              port: *port
              protocol: UDP

      ingress:
        app:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-production
            hajimari.io/enable: "false"
          hosts:
            - host: &host ${APP}.local.${SECRET_DOMAIN}
              paths:
                - path: /
                  service:
                    identifier: app
                    port: http

          tls: 
          - secretName: ${APP}-tls-production
            hosts:
              - *host

      persistence:
      
        config:
          enabled: true
          type: secret
          name: blocky-secret
          globalMounts:
            - path: /app/config.yml
              subPath: config.yml
              readOnly: true

        lists:
          type: configMap
          name: blocky-allowlist
          globalMounts:
            - readOnly: true