---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: external-dns-internal
  namespace: external-dns
spec:
  interval: 5m
  chart:
    spec:
      chart: external-dns
      version: 1.14.3
      sourceRef:
        kind: HelmRepository
        name: external-dns-charts
        namespace: flux-system
      interval: 10m
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  maxHistory: 1

  values:

    # Default values for external-dns.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    image:
      repository: registry.k8s.io/external-dns/external-dns
      # Overrides the image tag whose default is v{{ .Chart.AppVersion }}
      tag: ""
      pullPolicy: IfNotPresent

    imagePullSecrets: []

    nameOverride: ""
    fullnameOverride: "externaldns-internal" #modified to separate to internal

    commonLabels: {}

    serviceAccount:
      # opt out of the service account token automounting (at the service account level)
      automountServiceAccountToken:

      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # Labels to add to the service account
      labels: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    rbac:
      # Specifies whether RBAC resources should be created
      create: true
      additionalPermissions: []

    initContainers: []

    # Annotations to add to the Deployment
    deploymentAnnotations: {}

    podLabels: {}

    # Annotations to add to the Pod
    podAnnotations: {}

    shareProcessNamespace: false

    podSecurityContext:
      fsGroup: 65534
      seccompProfile:
        type: RuntimeDefault

    securityContext:
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      runAsUser: 65534
      readOnlyRootFilesystem: true
      capabilities:
        drop: ["ALL"]

    # Defaults to `ClusterFirst`.
    # Valid values are: `ClusterFirstWithHostNet`, `ClusterFirst`, `Default` or `None`.
    dnsPolicy:

    priorityClassName: ""

    terminationGracePeriodSeconds:

    serviceMonitor:
      enabled: false
      # force namespace
      # namespace: monitoring

      # Fallback to the prometheus default unless specified
      # interval: 10s

      ## scheme: HTTP scheme to use for scraping. Can be used with `tlsConfig` for example if using istio mTLS.
      # scheme: ""

      ## tlsConfig: TLS configuration to use when scraping the endpoint. For example if using istio mTLS.
      ## Of type: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#tlsconfig
      # tlsConfig: {}

      # bearerTokenFile:
      # Fallback to the prometheus default unless specified
      # scrapeTimeout: 30s

      ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
      additionalLabels: {}

      ## Used to pass annotations that are used by the Prometheus installed in your cluster to select Service Monitors to work with
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
      annotations: {}

      ## Metric relabel configs to apply to samples before ingestion.
      ## [Metric Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs)
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

      ## Relabel configs to apply to samples before ingestion.
      ## [Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config)
      relabelings: []
      # - sourceLabels: [__meta_kubernetes_pod_node_name]
      #   separator: ;
      #   regex: ^(.*)$
      #   targetLabel: nodename
      #   replacement: $1
      #   action: replace

      targetLabels: []

    env: 
      - name: EXTERNAL_DNS_PIHOLE_PASSWORD
        valueFrom:
          secretKeyRef:
            name: external-dns-secret
            key: PIHOLE_PRIMARY_PASSWORD
      - name: EXTERNAL_DNS_PIHOLE_SERVER
        value: "http://${PRIMARY_DNS_IP}"
      - name: EXTERNAL_DNS_PIHOLE_TLS_SKIP_VERIFY
        value: "true"


    livenessProbe:
      httpGet:
        path: /healthz
        port: http
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 2
      successThreshold: 1

    readinessProbe:
      httpGet:
        path: /healthz
        port: http
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1

    service:
      port: 7979
      annotations: {}

    extraVolumes: []

    extraVolumeMounts: []

    resources: {}

    nodeSelector: {}

    tolerations: []

    affinity: {}

    topologySpreadConstraints: []

    logLevel: info
    logFormat: text

    interval: 1m
    triggerLoopOnEvent: false

    namespaced: false

    sources:
      #- service
      - ingress
      # - crd #requires a manual apply / creation of the actual crd itself to use this
      - traefik-proxy #use this to detect ingressroutes

    policy: upsert-only

    # Specifies the registry for storing ownership and labels.
    # Valid values are "aws-sd", "noop", "dynamodb", and "txt".
    registry: noop
    # When using a registry other than "noop", specifies a name that
    # uniquely identifies this instance of external-dns.
    txtOwnerId: "pihole-external-dns"
    # Specifies a prefix for the domain names of TXT records created by the "txt" registry. Optional. Mutually exclusive with `txtSuffix`.
    txtPrefix: ""
    # Specifies a suffix for the domain names of TXT records created by the "txt" registry. Optional. Mutually exclusive with `txtPrefix`.
    txtSuffix: ""

    domainFilters: []

    provider: pihole

    extraArgs: 
          - --annotation-filter=external-dns/is-public notin (true)

    # when I want to make a service public, use the structure below on an ingress
    # ingress:
    #   main:
    #     enabled: true
    #     annotations:
    #       external-dns.alpha.kubernetes.io/target: "dyn.${SECRET_DOMAIN}" # this can override the 'host'
    #       external-dns/is-public: "true"

    secretConfiguration:
      enabled: false
      mountPath: ""
      subPath: ""
      data: {}

    deploymentStrategy:
      type: Recreate

    # Optional field that specifies the number of old ReplicaSets to retain to allow rollback with the Deployment.
    revisionHistoryLimit:

    # opt out of the service account token automounting (at the pod level)
    automountServiceAccountToken: