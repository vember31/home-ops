---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name zap2it
  namespace: media

spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false
    
  maxHistory: 1
  
  values:
    controllers:
      ${APP}:
        type: cronjob
        cronjob:
          schedule: "35 2 * * *"
          timeZone: ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
          ttlSecondsAfterFinished: 180  # Time to keep job resources after completion
          backoffLimit: 0  # Prevent retries
          activeDeadlineSeconds: 180  # Ensure the job completes in 1 minute
        containers:
          app:
            image:
              repository: ghcr.io/jef/zap2xml
              tag: v2.2.0@sha256:a864938260fc1c667b2f093f667456959c4654ff9bcf4ea336c00243c07c28b2
            env:
              TIMESPAN: 72 #3 days
              COUNTRY: USA
              TZ: ${TIMEZONE}
              OUTPUT_FILE: /recordings/xmltv.xml
              LINEUP_ID:
                valueFrom:
                  secretKeyRef:
                    name: zap2it-secret
                    key: LINEUP_ID
              POSTAL_CODE:
                valueFrom:
                  secretKeyRef:
                    name: zap2it-secret
                    key: ZAP2IT_ZIP

            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true

    persistence:
      recordings:
        enabled: true
        type: nfs
        server: ${OMV_IP}
        path: /export/recordings/
        globalMounts:
          - path: /recordings/

      